import numpy as np
import math

def getWeights( z, x, m, phsDegree, polyDegree ) :
    
    x = x - z
    
    P = np.zeros(( len(x), polyDegree+1 ))
    for j in range(polyDegree+1) :
        P[:,j] = x**j
    
    xx,yy = np.meshgrid( x, x )
    A = np.vstack(( \
        np.hstack(( np.abs(xx-yy)**phsDegree, P )), \
        np.hstack(( np.transpose(P), np.zeros((polyDegree+1,polyDegree+1)) )) \
        ))
    
    b = np.array([])
    if m == 0 :
        b = np.abs(0-x) ** phsDegree
    elif ( len(x) >= polyDegree+1 ) & ( phsDegree >= m+1 ) :
        if np.mod(m,2) == 0 :
            b = np.prod( np.arange(phsDegree-(m-1),phsDegree+1) ) * np.abs(0-x) ** (phsDegree-m)
        else :
            b = np.prod( np.arange(phsDegree-(m-1),phsDegree+1) ) * (0-x) ** (phsDegree-m) * np.sign(0-x)
    
    p = np.zeros(( polyDegree+1 ))
    if polyDegree >= m :
        p[m] = math.factorial(m)
    
    if b == np.array([]) :
        w = np.array([])
        sys.exit( "\nError: Bad parameters.\n" )
    else :
        b = np.transpose( np.hstack((b,p)) )
        print(np.shape(A))
        print(np.shape(b))
        w = np.linalg.solve( A, b )
        w = w[0:len(x)]
    
    return w